[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-creator-mcp"
dynamic = ["version"]
description = "A meta-MCP server for creating other MCP servers with AI guidance"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["mcp", "ai", "server", "creation", "automation"]
authors = [
  {name = "AI Workspace", email = "dev@ai-workspace.com"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "mcp[cli]>=1.2.0",
  "gradio>=4.0.0",
  "jinja2>=3.1.0",
  "pydantic>=2.0.0",
  "aiofiles>=23.0.0",
  "watchdog>=3.0.0",
  "jsonschema>=4.0.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0.0",
  "pytest-asyncio>=0.21.0",
  "ruff>=0.1.0",
  "mypy>=1.0.0",
]

[project.urls]
Documentation = "https://github.com/angrysky56/mcp-creator-mcp#readme"
Issues = "https://github.com/angrysky56/mcp-creator-mcp/issues"
Source = "https://github.com/angrysky56/mcp-creator-mcp"

[project.scripts]
mcp-creator = "mcp_creator.cli:main"
mcp-creator-gui = "mcp_creator.gradio_interface:launch"

[tool.hatch.version]
path = "src/mcp_creator/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_creator"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "gradio.*"
ignore_missing_imports = true
